trigger:
- master

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'ba93d10c-490f-4664-ae7e-012cd443f198'
  imageRepository: 'bryanvillalpandotrujillowebapinet'
  containerRegistry: 'apivillareg.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'apivillareg41677919-auth'
  vmImageName: 'ubuntu-latest'
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
- stage: BuildAndDeploy
  displayName: Build and Deploy stage
  jobs:
  - job: BuildAndDeploy
    displayName: Build and Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        if [[ "$(Build.SourceBranch)" == "refs/pull/"* ]]; then
          echo "##vso[task.setvariable variable=IS_PULL_REQUEST]true"
        else
          echo "##vso[task.setvariable variable=IS_PULL_REQUEST]false"
        fi
      displayName: 'Check if Pull Request'
      
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

    - ${{ if eq(variables['IS_PULL_REQUEST'], 'true') }}:
      - task: Kubernetes@1
        displayName: 'Create a new namespace for the pull request'
        inputs:
          command: apply
          useConfigurationFile: true
          inline: '{ "kind": "Namespace", "apiVersion": "v1", "metadata": { "name": "$(k8sNamespaceForPR)" }}'

      - task: KubernetesManifest@0
        displayName: Create imagePullSecret
        inputs:
          action: createSecret
          secretName: $(imagePullSecret)
          namespace: $(k8sNamespaceForPR)
          dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

      - task: KubernetesManifest@0
        displayName: Deploy to the new namespace in the Kubernetes cluster
        inputs:
          action: deploy
          namespace: $(k8sNamespaceForPR)
          manifests: |
            $(Pipeline.Workspace)/manifests/deployment.yml
            $(Pipeline.Workspace)/manifests/service.yml
          imagePullSecrets: |
            $(imagePullSecret)
          containers: |
            $(containerRegistry)/$(imageRepository):$(tag)

      - task: Kubernetes@1
        name: get
        displayName: 'Get services in the new namespace'
        continueOnError: true
        inputs:
          command: get
          namespace: $(k8sNamespaceForPR)
          arguments: svc
          outputFormat: jsonpath='http://{.items[0].status.loadBalancer.ingress[0].ip}:{.items[0].spec.ports[0].port}'

      - script: |
          url="$(get.KubectlOutput)"
          message="Your review app has been deployed"
          if [ ! -z "$url" -a "$url" != "http://:" ]
          then
            message="${message} and is available at $url.<br><br>[Learn More](https://aka.ms/testwithreviewapps) about how to test and provide feedback for the app."
          fi
          echo "##vso[task.setvariable variable=GITHUB_COMMENT]$message"

    - ${{ if eq(variables['IS_PULL_REQUEST'], 'false') }}:
      - task: KubernetesManifest@0
        displayName: Create imagePullSecret
        inputs:
          action: createSecret
          secretName: $(imagePullSecret)
          dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

      - task: KubernetesManifest@0
        displayName: Deploy to Kubernetes cluster
        inputs:
          action: deploy
          manifests: |
            $(Pipeline.Workspace)/manifests/deployment.yml
            $(Pipeline.Workspace)/manifests/service.yml
          imagePullSecrets: |
            $(imagePullSecret)
          containers: |
            $(containerRegistry)/$(imageRepository):$(tag)
